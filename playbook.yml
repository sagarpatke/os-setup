---
- hosts: localhost
  become: yes
  tasks:
    - name: Create directory /etc/X11/xorg.conf.d
      file:
        path: /etc/X11/xorg.conf.d
        state: directory
        recurse: yes
    - name: Configure TouchToTap and NaturalScrolling
      template:
        src: etc/X11/xorg.conf.d/00-synaptics.conf
        dest: /etc/X11/xorg.conf.d/00-synaptics.conf

    - name: Fix Screen Tearing problem
      template:
        src: etc/X11/xorg.conf.d/20-intel.conf
        dest: /etc/X11/xorg.conf.d/20-intel.conf
      
    - name: Install essential packages
      package:
        name: '{{ item }}'
        state: latest
      loop:
        - gpg
        - git
        - apt-transport-https
        - fonts-noto-color-emoji
        - ca-certificates
        - curl
        - firmware-iwlwifi
        - vim
        - network-manager

    - name: Install terminology
      package:
        name: terminology
        state: latest

    - name: Install i3
      package:
        name: i3
        state: latest

    - name: Install lightdm
      package:
        name: lightdm
        state: latest
    - name: Configure lightdm
      template:
        src: etc/lightdm/lightdm.conf
        dest: /etc/lightdm/lightdm.conf
    
    - name: Add buster-backports repository for installing tor-browser
      apt_repository:
        repo: deb http://deb.debian.org/debian buster-backports main contrib
        state: present
        filename: buster-backports
    - name: Install tor-browser
      package:
        name: torbrowser-launcher
        state: present

    - name: Install Google Signing Key
      apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present
    - name: Add Google Chrome Repository
      apt_repository:
        repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
        state: present
        filename: google-chrome
    - name: Install Google Chrome Stable
      package:
        name: google-chrome-stable
        state: latest

    - name: Install Visual Studio Code key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: Add Visual Studio Code Repository
      apt_repository:
        repo: deb [arch=amd64] http://packages.microsoft.com/repos/vscode stable main
        state: present
        filename: vscode
    - name: Install Visual Studio Code
      package:
        name: code
        state: latest
    
    - name: Install Docker Signing Key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
        state: present
        filename: docker
    - name: Install Docker
      package:
        name: '{{ item }}'
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose
    - name: Add user to docker group
      user:
        name: '{{ ansible_env.SUDO_USER }}'
        append: yes
        groups:
          - docker
    - name: Stop docker daemon
      service:
        name: docker
        state: stopped
        enabled: no

    - name: Install Virtualbox Key
      apt_key:
        url: https://www.virtualbox.org/download/oracle_vbox_2016.asc
        state: present
      tags:
        - virtualization
    - name: Add Virtualbox Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian buster contrib
        filename: virtualbox
        state: present
      tags:
        - virtualization
    - name: Install Virtualbox 6.0
      package:
        name: virtualbox-6.0
        state: latest
      tags:
        - virtualization
    - name: Install vagrant
      package:
        name: vagrant
        state: latest
      tags:
        - virtualization
    
    - name: Check latest version of kubectl
      uri:
        url: https://storage.googleapis.com/kubernetes-release/release/stable.txt
        return_content: yes
      register: kubectl_version
      tags:
        - minikube
    - name: Get kubectl
      get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version.content | replace('\n', '') }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: 0755
      tags:
        - minikube

    - name: Check latest version of minikube
      uri:
        url: https://api.github.com/repos/kubernetes/minikube/releases/latest
      register: minikube_version
      tags:
        - minikube
    - name: Get Minikube Checksum
      uri:
        url: https://github.com/kubernetes/minikube/releases/download/{{ minikube_version.json.tag_name }}/minikube-linux-amd64.sha256
        return_content: yes
      register: minikube_checksum
      tags:
        - minikube
    - name: Download and install minikube
      get_url:
        url: 'https://github.com/kubernetes/minikube/releases/download/{{ minikube_version.json.tag_name }}/minikube-linux-amd64'
        dest: /usr/local/bin/minikube
        mode: 0755
        checksum: "sha256:{{ minikube_checksum.content | replace('\n', '') }}"
      tags:
        - minikube

    - name: Check latest version of skaffold
      uri:
        url: https://api.github.com/repos/GoogleContainerTools/skaffold/releases/latest
      register: skaffold_version
      tags:
        - skaffold
    - name: Get Skaffold Checksum
      uri:
        url: https://github.com/GoogleContainerTools/skaffold/releases/download/{{ skaffold_version.json.tag_name }}/skaffold-linux-amd64.sha256
        return_content: yes
      register: skaffold_checksum
      tags:
        - skaffold
    - name: Debug Skaffold Checksum
      debug:
        msg: "{{ skaffold_checksum.content.split()[0] }}"
      tags:
        - skaffold
    - name: Download and install skaffold
      get_url:
        url: "https://github.com/GoogleContainerTools/skaffold/releases/download/{{ skaffold_version.json.tag_name }}/skaffold-linux-amd64"
        dest: /usr/local/bin/skaffold
        mode: 0755
        checksum: "sha256:{{ skaffold_checksum.content.split()[0] }}"
      tags:
        - skaffold

    - name: Install Google SDK Signing Key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    - name: Configure Google SDK Repository
      apt_repository:
        repo: deb https://packages.cloud.google.com/apt cloud-sdk main
        filename: cloud-sdk
        state: present
    - name: Install Cloud SDK
      package:
        name: google-cloud-sdk
        state: latest
    
    - name: Install helm
      uri:
        url: https://api.github.com/repos/helm/helm/releases/latest
      register: helm_version
      tags:
        - helm
    - name: Helm version
      debug:
        msg: "{{ helm_version.json.tag_name }}"
      tags:
        - helm
    - name: Download helm
      get_url:
        url: https://get.helm.sh/helm-{{ helm_version.json.tag_name }}-linux-amd64.tar.gz
        dest: /opt
      tags:
        - helm
    - name: Unarchive helm
      unarchive:
        copy: no
        src: /opt/helm-{{ helm_version.json.tag_name }}-linux-amd64.tar.gz
        dest: /opt
      tags:
        - helm
    - name: Copy helm binary to path
      copy:
        remote_src: yes
        src: /opt/linux-amd64/{{ item }}
        dest: /usr/local/bin
        mode: 0755
      loop:
        - helm
        - tiller
      tags:
        - helm

    - name: Check if aws-cli is installed
      stat:
        path: /usr/local/aws-cli
      register: awscli_stat
      tags:
        - aws
    - name: Download AWS CLI archive
      get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp
      when: not awscli_stat.stat.exists
      tags:
        - aws
    - name: Unzip archive
      unarchive:
        copy: no
        src: /tmp/awscli-exe-linux-x86_64.zip
        dest: /tmp
      when: not awscli_stat.stat.exists
      tags:
        - aws
    - name: Install aws-cli
      shell:
        cmd: /tmp/aws/install
      when: not awscli_stat.stat.exists
      tags:
        - aws
    - name: Install linuxbrew
      package:
        name: linuxbrew-wrapper
        state: latest
      tags:
        - aws

    - name: Add Azure CLI software repository
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ buster main
        filename: azure-cli-software-repository
        state: present
      tags:
        - azure
    - name: Install Azure CLI
      package:
        name: azure-cli
        state: latest
      tags:
        - azure
    
    - name: Add Azure functions core tools repository
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-buster-prod buster main
        filename: azure-functions-core-tools
        state: present
      tags:
        - azure
    - name: Install Azure functions core tools
      package:
        name: azure-functions-core-tools
        state: latest
      tags:
        - azure
    - name: Install dotnet core 3.1
      package:
        name: dotnet-sdk-3.1
        state: latest
      tags:
        - dotnet

    - name: Install OpenJDK 11 and maven
      package:
        name: "{{ item }}"
        state: latest
      loop:
        - openjdk-11-jdk
        - maven
      tags:
        - java

    - name: Add Amazon Corretto signing key
      apt_key:
        url: https://apt.corretto.aws/corretto.key
        state: present
      tags:
        - java
    - name: Add Amazon Corretto repository
      apt_repository:
        repo: deb https://apt.corretto.aws stable main
        filename: corretto
        state: present
      tags:
        - java
    - name: Install amazon corretto
      package:
        name: "{{ item }}"
        state: latest
      loop:
        - java-1.8.0-amazon-corretto-jdk
        - java-11-amazon-corretto-jdk
      tags:
        - java

    - name: Add Azul Zulu JDK signing key
      apt_key:
        keyserver: hkp://keyserver.ubuntu.com:80
        id: "0xB1998361219BD9C9"
        state: present
      tags:
        - java
    - name: Add Azul Zulu JDK
      apt_repository:
        repo: deb http://repos.azul.com/azure-only/zulu/apt stable main
        filename: azul-zulu
        state: present
      tags:
        - java
    - name: Install Azul Zulu 8
      package:
        name: "{{ item }}"
        state: latest
      loop:
        - zulu-8-azure-jdk
        - zulu-11-azure-jdk
      tags:
        - java

    - name: Download Intellij Idea
      get_url:
        url: https://download-cf.jetbrains.com/idea/ideaIC-2020.1.2.tar.gz
        dest: /opt/ideaIC-2020.1.2.tar.gz
      tags:
        - java
    - name: Unpack IntelliJ Idea
      unarchive:
        copy: no
        src: /opt/ideaIC-2020.1.2.tar.gz
        dest: /opt/
      tags:
        - java
    - name: Link idea.sh to idea
      file:
        src: /opt/idea-IC-201.7846.76/bin/idea.sh
        dest: /usr/local/bin/idea
        state: link
      tags:
        - java
      

    - name: Install Bluetooth utilities
      package:
        name: "{{ item }}"
        state: latest
      loop:
        - pulseaudio
        - pulseaudio-module-bluetooth
        - pavucontrol
        - bluez-firmware
      notify:
        - Restart Bluetooth Service
        - Kill pulseaudio

    - name: Install Open Broadcaster Studio
      package:
        name: obs-studio
        state: latest
      tags:
        - obs
    
  handlers:
    - name: Restart Bluetooth Service
      service:
        name: bluetooth
        state: restarted
    - name: Kill pulseaudio
      shell: killall -9 pulseaudio
      failed_when: false

- hosts: localhost
  become: no
  tasks:     
    - name: Create i3 configuration directory
      file:
        path: ~/.config/i3
        state: directory
        recurse: yes
    - name: Configure i3
      template:
        src: user/.config/i3/config
        dest: ~/.config/i3/config

    - name: Configure AWS Completer
      lineinfile:
        line: complete -C 'aws_completer' aws
        path: ~/.bashrc
        state: present
      tags:
        - aws
    - name: Add linuxbrew bin path in PATH
      lineinfile:
        line: export PATH=$PATH:/home/linuxbrew/.linuxbrew/bin
        path: ~/.bashrc
        state: present
      tags:
        - aws
    
    - name: Install VSCode Extensions
      include_tasks: ./install_vscode_extension.yml
      vars:
        item: '{{ item }}'
      tags:
        - vscode-extensions
      loop:
        - ms-azuretools.vscode-docker
        - GoogleCloudTools.cloudcode
        - shd101wyy.markdown-preview-enhanced
        - ms-azuretools.vscode-azurefunctions
        - vscjava.vscode-java-debug
        - redhat.java
